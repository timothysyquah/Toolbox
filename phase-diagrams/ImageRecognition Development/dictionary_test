#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Tue Jul 28 22:25:44 2020

@author: tquah
"""
# import numpy as np
# a = np.array([1, 1])
# b = np.array([1,2])
# c = np.vstack((a,b))
from joblib import Parallel, delayed
import multiprocessing

# Vars
my_list = range(10)
squares = []

# Function to parallelize
def find_square(i,a):
    return a*i ** 2

# Without parallel processing
for index, element in enumerate(my_list):
    squares.append(find_square(element))
a = 10
# With parallel processing
num_cores = multiprocessing.cpu_count()
squares = Parallel(n_jobs=num_cores, verbose=50)(delayed(
    find_square(i,a))(i)for i in my_list)
